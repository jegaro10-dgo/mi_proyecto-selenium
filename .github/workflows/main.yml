name: Pruebas de Python y Escaneo de Seguridad

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  complete_scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout del código
      uses: actions/checkout@v4
      
    - name: Configurar Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"
        
    - name: Instalar dependencias
      run: |
        echo "Instalando dependencias..."
        python -m pip install --upgrade pip
        pip install pytest requests selenium
        
    - name: Ejecutar pruebas de Pytest
      run: |
        echo "Ejecutando pruebas de Pytest..."
        pytest
    
    # Construye la imagen de Docker de tu aplicación.
    - name: Construir la imagen de Docker de la aplicación
      run: |
        docker build -t mi-app-web .

    # Crea una red de Docker y ejecuta el contenedor de la aplicación.
    - name: Crear red de Docker y ejecutar el contenedor de la aplicación
      run: |
        docker network create zap-scan-network
        docker run -d --name mi-app --network zap-scan-network mi-app-web
        
        echo "Esperando 30 segundos para que el contenedor de la aplicación inicie completamente..."
        sleep 30
        
    # Ejecuta ZAP, resolviendo la IP del contenedor de la aplicación en la misma línea.
    - name: Ejecutar escaneo de seguridad con ZAP
      run: |
        docker run --rm --name zap-scanner --network zap-scan-network \
          -v $(pwd):/zap/wrk \
          --user root \
          ghcr.io/zaproxy/zaproxy:stable \
          zap-baseline.py -t http://$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' mi-app):5000 \
          -J /zap/wrk/report_json.json -r /zap/wrk/report_html.html
        
    - name: Subir reporte de seguridad (HTML)
      uses: actions/upload-artifact@v4
      with:
        name: zap-report-html
        path: report_html.html
        
    # Limpia los contenedores al final, incluso si los pasos anteriores fallaron.
    - name: Limpiar contenedores
      if: always()
      run: |
        echo "Deteniendo y eliminando contenedores..."
        docker stop mi-app || true
        docker rm mi-app || true
        docker network rm zap-scan-network || true

        # que ya funcione
