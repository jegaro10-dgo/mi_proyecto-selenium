# Archivo: .github/workflows/main.yml
name: Pruebas de Python y Seguridad

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout del código
      uses: actions/checkout@v4
      
    - name: Configurar Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"
        
    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install pytest requests selenium
        
    - name: Ejecutar pruebas de Pytest
      run: |
        echo "Ejecutando todas las pruebas en la carpeta 'tests'..."
        pytest

  # Tarea de escaneo de seguridad (versión 6, la definitiva)
  zap_scan:
    # Esta tarea solo se ejecuta si la tarea de 'build' es exitosa.
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4
        
      - name: Iniciar la aplicación web de prueba
        # Reemplaza 'app.py' con el nombre de tu archivo principal si es diferente.
        run: |
          python app.py &
          echo "Esperando 10 segundos para que la aplicación se inicie..."
          sleep 10
        
      - name: Escanear la aplicación con OWASP ZAP
        # Usa la acción de ZAP en su última versión estable.
        uses: zaproxy/action-baseline@v0.12.0
        with:
          # Aquí debes poner la URL de tu aplicación que se ejecuta localmente.
          target: 'http://localhost:5000'
          # Especifica la nueva imagen de Docker para evitar el error de acceso.
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
