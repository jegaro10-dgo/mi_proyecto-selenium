# Archivo: .github/workflows/combined-tests.yml

name: Pruebas Combinadas (Funcionales y de Carga)

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'locustfile.py'
      - 'tests/**'
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'locustfile.py'
      - 'tests/**'
  workflow_dispatch:

jobs:
  # Job 1: Ejecutar pruebas de carga con Locust
  run-locust-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Configurar Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Instalar Locust
      run: |
        python -m pip install --upgrade pip
        pip install locust
    
    - name: Ejecutar pruebas de carga
      run: |
        locust -f locustfile.py --headless --host=https://demowebshop.tricentis.com/ --users 50 --spawn-rate 10 --run-time 60s --html report-locust.html

    - name: Subir reporte de carga
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: locust-reporte
        path: report-locust.html

  # Job 2: Ejecutar pruebas funcionales de Selenium/Pytest en paralelo
  run-functional-tests:
    # Este job se ejecutará solo después de que las pruebas de carga terminen
    needs: run-locust-tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Aquí definimos los navegadores en los que se ejecutarán las pruebas
        browser: [chrome, firefox]

    steps:
    - uses: actions/checkout@v2

    - name: Configurar Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-xdist # Aseguramos la instalación del plugin de paralelismo
    
    - name: Instalar navegador (${{ matrix.browser }})
      if: matrix.browser == 'chrome'
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: 'stable'

    - name: Instalar navegador (${{ matrix.browser }})
      if: matrix.browser == 'firefox'
      uses: browser-actions/setup-firefox@latest

    - name: Ejecutar pruebas con Pytest en paralelo
      run: |
        # El flag -n auto le indica a pytest-xdist que use un proceso por cada CPU disponible
        pytest --browser=${{ matrix.browser }} --html=report-${{ matrix.browser }}.html --self-contained-html -n auto

    - name: Subir reporte de prueba (${{ matrix.browser }})
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: html-reporte-${{ matrix.browser }}
        path: report-${{ matrix.browser }}.html

    - name: Subir capturas de pantalla de errores
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: screenshots-${{ matrix.browser }}
        path: screenshots/
